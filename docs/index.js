Index.PACKAGES = {"scallion.properties" : [{"name" : "scallion.properties.LeftRecursion", "members_trait" : [{"label" : "isLeftRecursive", "tail" : "(syntax: Recursive[_]): Boolean", "member" : "scallion.properties.LeftRecursion.isLeftRecursive", "link" : "scallion\/properties\/LeftRecursion.html#isLeftRecursive(syntax:LeftRecursion.this.Syntax.Recursive[_]):Boolean", "kind" : "def"}, {"label" : "hasLeftRecursion", "tail" : "(syntax: (LeftRecursion.this)#Syntax[_]): Boolean", "member" : "scallion.properties.LeftRecursion.hasLeftRecursion", "link" : "scallion\/properties\/LeftRecursion.html#hasLeftRecursion(syntax:LeftRecursion.this.Syntax[_]):Boolean", "kind" : "def"}, {"label" : "findLeftRecursions", "tail" : "(syntax: (LeftRecursion.this)#Syntax[_]): Set[Recursive[_]]", "member" : "scallion.properties.LeftRecursion.findLeftRecursions", "link" : "scallion\/properties\/LeftRecursion.html#findLeftRecursions(syntax:LeftRecursion.this.Syntax[_]):scala.collection.immutable.Set[LeftRecursion.this.Syntax.Recursive[_]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/properties\/LeftRecursion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/properties\/LeftRecursion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/properties\/LeftRecursion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/properties\/LeftRecursion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/properties\/LeftRecursion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/properties\/LeftRecursion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/properties\/LeftRecursion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/LeftRecursion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/LeftRecursion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/LeftRecursion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/properties\/LeftRecursion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/properties\/LeftRecursion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/properties\/LeftRecursion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/properties\/LeftRecursion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/properties\/LeftRecursion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/properties\/LeftRecursion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/properties\/LeftRecursion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/properties\/LeftRecursion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/properties\/LeftRecursion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to detect left recursion in a syntax.", "trait" : "scallion\/properties\/LeftRecursion.html", "kind" : "trait"}, {"name" : "scallion.properties.StructuralEquivalence", "members_trait" : [{"label" : "structurallyEquivalent", "tail" : "(lhs: (StructuralEquivalence.this)#Syntax[_], rhs: (StructuralEquivalence.this)#Syntax[_]): Boolean", "member" : "scallion.properties.StructuralEquivalence.structurallyEquivalent", "link" : "scallion\/properties\/StructuralEquivalence.html#structurallyEquivalent(lhs:StructuralEquivalence.this.Syntax[_],rhs:StructuralEquivalence.this.Syntax[_]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/properties\/StructuralEquivalence.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/properties\/StructuralEquivalence.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/properties\/StructuralEquivalence.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/properties\/StructuralEquivalence.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/properties\/StructuralEquivalence.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/properties\/StructuralEquivalence.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/properties\/StructuralEquivalence.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/StructuralEquivalence.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/StructuralEquivalence.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/properties\/StructuralEquivalence.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/properties\/StructuralEquivalence.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/properties\/StructuralEquivalence.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/properties\/StructuralEquivalence.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/properties\/StructuralEquivalence.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/properties\/StructuralEquivalence.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/properties\/StructuralEquivalence.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/properties\/StructuralEquivalence.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/properties\/StructuralEquivalence.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/properties\/StructuralEquivalence.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to compare syntaxes.", "trait" : "scallion\/properties\/StructuralEquivalence.html", "kind" : "trait"}], "scallion.factorization" : [{"name" : "scallion.factorization.Factorization", "members_trait" : [{"label" : "solveFirstConflicts", "tail" : "(syntax: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[A]", "member" : "scallion.factorization.Factorization.solveFirstConflicts", "link" : "scallion\/factorization\/Factorization.html#solveFirstConflicts[A](syntax:Factorization.this.Syntax[A]):Factorization.this.Syntax[A]", "kind" : "def"}, {"label" : "unfoldLeftmostRecursives", "tail" : "(syntax: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldLeftmostRecursives", "link" : "scallion\/factorization\/Factorization.html#unfoldLeftmostRecursives[A](syntax:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "unfoldDisjunctions", "tail" : "(s: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldDisjunctions", "link" : "scallion\/factorization\/Factorization.html#unfoldDisjunctions[A](s:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "eliminate", "tail" : "(in: (Factorization.this)#Syntax[B], original: (Factorization.this)#Syntax[A], subst: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.eliminate", "link" : "scallion\/factorization\/Factorization.html#eliminate[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A]):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "substitute", "tail" : "(in: (Factorization.this)#Syntax[B], original: (Factorization.this)#Syntax[A], subst: (Factorization.this)#Syntax[A], elim: Boolean): (Factorization.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.substitute", "link" : "scallion\/factorization\/Factorization.html#substitute[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A],elim:Boolean):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "leftFactorOut", "tail" : "(leftFactor: (Factorization.this)#Syntax[L], s: (Factorization.this)#Syntax[A]): ((Factorization.this)#Syntax[(L) ⇒ A], (Factorization.this)#Syntax[A])", "member" : "scallion.factorization.LeftFactorization.leftFactorOut", "link" : "scallion\/factorization\/Factorization.html#leftFactorOut[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):(LeftFactorization.this.Syntax[L=>A],LeftFactorization.this.Syntax[A])", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (Factorization.this)#Kind, s: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/Factorization.html#leftFactorize[A](leftFactor:LeftFactorization.this.Kind,s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (Factorization.this)#Syntax[L], s: (Factorization.this)#Syntax[A]): (Factorization.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/Factorization.html#leftFactorize[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "splitLeftRecursive", "tail" : "(syntax: Recursive[A]): (Option[(Factorization.this)#Syntax[A]], Option[(Factorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitLeftRecursive", "link" : "scallion\/factorization\/Factorization.html#splitLeftRecursive[A](syntax:Split.this.Syntax.Recursive[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitByPrefix", "tail" : "(syntax: (Factorization.this)#Syntax[A], splitter: ((Factorization.this)#Syntax[_]) ⇒ Boolean): (Option[(Factorization.this)#Syntax[A]], Option[(Factorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitByPrefix", "link" : "scallion\/factorization\/Factorization.html#splitByPrefix[A](syntax:Split.this.Syntax[A],splitter:Split.this.Syntax[_]=>Boolean):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitNullable", "tail" : "(syntax: (Factorization.this)#Syntax[A]): ((Factorization.this)#Syntax[A], (Factorization.this)#Syntax[A])", "member" : "scallion.factorization.Split.splitNullable", "link" : "scallion\/factorization\/Factorization.html#splitNullable[A](syntax:Split.this.Syntax[A]):(Split.this.Syntax[A],Split.this.Syntax[A])", "kind" : "def"}, {"label" : "trySplitNullable", "tail" : "(syntax: (Factorization.this)#Syntax[A]): (Option[(Factorization.this)#Syntax[A]], Option[(Factorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.trySplitNullable", "link" : "scallion\/factorization\/Factorization.html#trySplitNullable[A](syntax:Split.this.Syntax[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/Factorization.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/Factorization.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/Factorization.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/Factorization.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/Factorization.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/Factorization.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/Factorization.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Factorization.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Factorization.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Factorization.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/Factorization.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/Factorization.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/Factorization.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/Factorization.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/Factorization.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/Factorization.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/Factorization.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/Factorization.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/Factorization.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to factorize syntaxes.", "trait" : "scallion\/factorization\/Factorization.html", "kind" : "trait"}, {"name" : "scallion.factorization.LeftFactorization", "members_trait" : [{"label" : "leftFactorOut", "tail" : "(leftFactor: (LeftFactorization.this)#Syntax[L], s: (LeftFactorization.this)#Syntax[A]): ((LeftFactorization.this)#Syntax[(L) ⇒ A], (LeftFactorization.this)#Syntax[A])", "member" : "scallion.factorization.LeftFactorization.leftFactorOut", "link" : "scallion\/factorization\/LeftFactorization.html#leftFactorOut[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):(LeftFactorization.this.Syntax[L=>A],LeftFactorization.this.Syntax[A])", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (LeftFactorization.this)#Kind, s: (LeftFactorization.this)#Syntax[A]): (LeftFactorization.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/LeftFactorization.html#leftFactorize[A](leftFactor:LeftFactorization.this.Kind,s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (LeftFactorization.this)#Syntax[L], s: (LeftFactorization.this)#Syntax[A]): (LeftFactorization.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/LeftFactorization.html#leftFactorize[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "splitLeftRecursive", "tail" : "(syntax: Recursive[A]): (Option[(LeftFactorization.this)#Syntax[A]], Option[(LeftFactorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitLeftRecursive", "link" : "scallion\/factorization\/LeftFactorization.html#splitLeftRecursive[A](syntax:Split.this.Syntax.Recursive[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitByPrefix", "tail" : "(syntax: (LeftFactorization.this)#Syntax[A], splitter: ((LeftFactorization.this)#Syntax[_]) ⇒ Boolean): (Option[(LeftFactorization.this)#Syntax[A]], Option[(LeftFactorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitByPrefix", "link" : "scallion\/factorization\/LeftFactorization.html#splitByPrefix[A](syntax:Split.this.Syntax[A],splitter:Split.this.Syntax[_]=>Boolean):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitNullable", "tail" : "(syntax: (LeftFactorization.this)#Syntax[A]): ((LeftFactorization.this)#Syntax[A], (LeftFactorization.this)#Syntax[A])", "member" : "scallion.factorization.Split.splitNullable", "link" : "scallion\/factorization\/LeftFactorization.html#splitNullable[A](syntax:Split.this.Syntax[A]):(Split.this.Syntax[A],Split.this.Syntax[A])", "kind" : "def"}, {"label" : "trySplitNullable", "tail" : "(syntax: (LeftFactorization.this)#Syntax[A]): (Option[(LeftFactorization.this)#Syntax[A]], Option[(LeftFactorization.this)#Syntax[A]])", "member" : "scallion.factorization.Split.trySplitNullable", "link" : "scallion\/factorization\/LeftFactorization.html#trySplitNullable[A](syntax:Split.this.Syntax[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/LeftFactorization.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/LeftFactorization.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/LeftFactorization.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/LeftFactorization.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/LeftFactorization.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/LeftFactorization.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/LeftFactorization.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftFactorization.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftFactorization.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftFactorization.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/LeftFactorization.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/LeftFactorization.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/LeftFactorization.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/LeftFactorization.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/LeftFactorization.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/LeftFactorization.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/LeftFactorization.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/LeftFactorization.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/LeftFactorization.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to apply left factorization to a syntax.", "trait" : "scallion\/factorization\/LeftFactorization.html", "kind" : "trait"}, {"name" : "scallion.factorization.LeftRecursion", "members_trait" : [{"label" : "eliminateLeftRecursion", "tail" : "(syntax: Recursive[A]): Recursive[A]", "member" : "scallion.factorization.LeftRecursion.eliminateLeftRecursion", "link" : "scallion\/factorization\/LeftRecursion.html#eliminateLeftRecursion[A](syntax:LeftRecursion.this.Syntax.Recursive[A]):LeftRecursion.this.Syntax.Recursive[A]", "kind" : "def"}, {"label" : "eliminateDirectLeftRecursion", "tail" : "(syntax: Recursive[A]): Recursive[A]", "member" : "scallion.factorization.LeftRecursion.eliminateDirectLeftRecursion", "link" : "scallion\/factorization\/LeftRecursion.html#eliminateDirectLeftRecursion[A](syntax:LeftRecursion.this.Syntax.Recursive[A]):LeftRecursion.this.Syntax.Recursive[A]", "kind" : "def"}, {"label" : "isLeftRecursive", "tail" : "(syntax: Recursive[_]): Boolean", "member" : "scallion.properties.LeftRecursion.isLeftRecursive", "link" : "scallion\/factorization\/LeftRecursion.html#isLeftRecursive(syntax:LeftRecursion.this.Syntax.Recursive[_]):Boolean", "kind" : "def"}, {"label" : "hasLeftRecursion", "tail" : "(syntax: (LeftRecursion.this)#Syntax[_]): Boolean", "member" : "scallion.properties.LeftRecursion.hasLeftRecursion", "link" : "scallion\/factorization\/LeftRecursion.html#hasLeftRecursion(syntax:LeftRecursion.this.Syntax[_]):Boolean", "kind" : "def"}, {"label" : "findLeftRecursions", "tail" : "(syntax: (LeftRecursion.this)#Syntax[_]): Set[Recursive[_]]", "member" : "scallion.properties.LeftRecursion.findLeftRecursions", "link" : "scallion\/factorization\/LeftRecursion.html#findLeftRecursions(syntax:LeftRecursion.this.Syntax[_]):scala.collection.immutable.Set[LeftRecursion.this.Syntax.Recursive[_]]", "kind" : "def"}, {"label" : "unfoldLeftmostRecursives", "tail" : "(syntax: (LeftRecursion.this)#Syntax[A]): (LeftRecursion.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldLeftmostRecursives", "link" : "scallion\/factorization\/LeftRecursion.html#unfoldLeftmostRecursives[A](syntax:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "unfoldDisjunctions", "tail" : "(s: (LeftRecursion.this)#Syntax[A]): (LeftRecursion.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldDisjunctions", "link" : "scallion\/factorization\/LeftRecursion.html#unfoldDisjunctions[A](s:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "eliminate", "tail" : "(in: (LeftRecursion.this)#Syntax[B], original: (LeftRecursion.this)#Syntax[A], subst: (LeftRecursion.this)#Syntax[A]): (LeftRecursion.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.eliminate", "link" : "scallion\/factorization\/LeftRecursion.html#eliminate[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A]):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "substitute", "tail" : "(in: (LeftRecursion.this)#Syntax[B], original: (LeftRecursion.this)#Syntax[A], subst: (LeftRecursion.this)#Syntax[A], elim: Boolean): (LeftRecursion.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.substitute", "link" : "scallion\/factorization\/LeftRecursion.html#substitute[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A],elim:Boolean):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "leftFactorOut", "tail" : "(leftFactor: (LeftRecursion.this)#Syntax[L], s: (LeftRecursion.this)#Syntax[A]): ((LeftRecursion.this)#Syntax[(L) ⇒ A], (LeftRecursion.this)#Syntax[A])", "member" : "scallion.factorization.LeftFactorization.leftFactorOut", "link" : "scallion\/factorization\/LeftRecursion.html#leftFactorOut[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):(LeftFactorization.this.Syntax[L=>A],LeftFactorization.this.Syntax[A])", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (LeftRecursion.this)#Kind, s: (LeftRecursion.this)#Syntax[A]): (LeftRecursion.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/LeftRecursion.html#leftFactorize[A](leftFactor:LeftFactorization.this.Kind,s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "leftFactorize", "tail" : "(leftFactor: (LeftRecursion.this)#Syntax[L], s: (LeftRecursion.this)#Syntax[A]): (LeftRecursion.this)#Syntax[A]", "member" : "scallion.factorization.LeftFactorization.leftFactorize", "link" : "scallion\/factorization\/LeftRecursion.html#leftFactorize[A,L](leftFactor:LeftFactorization.this.Syntax[L],s:LeftFactorization.this.Syntax[A]):LeftFactorization.this.Syntax[A]", "kind" : "def"}, {"label" : "splitLeftRecursive", "tail" : "(syntax: Recursive[A]): (Option[(LeftRecursion.this)#Syntax[A]], Option[(LeftRecursion.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitLeftRecursive", "link" : "scallion\/factorization\/LeftRecursion.html#splitLeftRecursive[A](syntax:Split.this.Syntax.Recursive[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitByPrefix", "tail" : "(syntax: (LeftRecursion.this)#Syntax[A], splitter: ((LeftRecursion.this)#Syntax[_]) ⇒ Boolean): (Option[(LeftRecursion.this)#Syntax[A]], Option[(LeftRecursion.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitByPrefix", "link" : "scallion\/factorization\/LeftRecursion.html#splitByPrefix[A](syntax:Split.this.Syntax[A],splitter:Split.this.Syntax[_]=>Boolean):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitNullable", "tail" : "(syntax: (LeftRecursion.this)#Syntax[A]): ((LeftRecursion.this)#Syntax[A], (LeftRecursion.this)#Syntax[A])", "member" : "scallion.factorization.Split.splitNullable", "link" : "scallion\/factorization\/LeftRecursion.html#splitNullable[A](syntax:Split.this.Syntax[A]):(Split.this.Syntax[A],Split.this.Syntax[A])", "kind" : "def"}, {"label" : "trySplitNullable", "tail" : "(syntax: (LeftRecursion.this)#Syntax[A]): (Option[(LeftRecursion.this)#Syntax[A]], Option[(LeftRecursion.this)#Syntax[A]])", "member" : "scallion.factorization.Split.trySplitNullable", "link" : "scallion\/factorization\/LeftRecursion.html#trySplitNullable[A](syntax:Split.this.Syntax[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/LeftRecursion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/LeftRecursion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/LeftRecursion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/LeftRecursion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/LeftRecursion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/LeftRecursion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/LeftRecursion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftRecursion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftRecursion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/LeftRecursion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/LeftRecursion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/LeftRecursion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/LeftRecursion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/LeftRecursion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/LeftRecursion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/LeftRecursion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/LeftRecursion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/LeftRecursion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/LeftRecursion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "scallion\/factorization\/LeftRecursion.html", "kind" : "trait"}, {"name" : "scallion.factorization.Split", "members_trait" : [{"label" : "splitLeftRecursive", "tail" : "(syntax: Recursive[A]): (Option[(Split.this)#Syntax[A]], Option[(Split.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitLeftRecursive", "link" : "scallion\/factorization\/Split.html#splitLeftRecursive[A](syntax:Split.this.Syntax.Recursive[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitByPrefix", "tail" : "(syntax: (Split.this)#Syntax[A], splitter: ((Split.this)#Syntax[_]) ⇒ Boolean): (Option[(Split.this)#Syntax[A]], Option[(Split.this)#Syntax[A]])", "member" : "scallion.factorization.Split.splitByPrefix", "link" : "scallion\/factorization\/Split.html#splitByPrefix[A](syntax:Split.this.Syntax[A],splitter:Split.this.Syntax[_]=>Boolean):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "splitNullable", "tail" : "(syntax: (Split.this)#Syntax[A]): ((Split.this)#Syntax[A], (Split.this)#Syntax[A])", "member" : "scallion.factorization.Split.splitNullable", "link" : "scallion\/factorization\/Split.html#splitNullable[A](syntax:Split.this.Syntax[A]):(Split.this.Syntax[A],Split.this.Syntax[A])", "kind" : "def"}, {"label" : "trySplitNullable", "tail" : "(syntax: (Split.this)#Syntax[A]): (Option[(Split.this)#Syntax[A]], Option[(Split.this)#Syntax[A]])", "member" : "scallion.factorization.Split.trySplitNullable", "link" : "scallion\/factorization\/Split.html#trySplitNullable[A](syntax:Split.this.Syntax[A]):(Option[Split.this.Syntax[A]],Option[Split.this.Syntax[A]])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/Split.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/Split.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/Split.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/Split.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/Split.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/Split.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/Split.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Split.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Split.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Split.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/Split.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/Split.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/Split.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/Split.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/Split.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/Split.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/Split.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/Split.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/Split.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to transform a syntax into an quivalentdisjuction, where each alternative has some specified property.", "trait" : "scallion\/factorization\/Split.html", "kind" : "trait"}, {"name" : "scallion.factorization.Substitution", "members_trait" : [{"label" : "eliminate", "tail" : "(in: (Substitution.this)#Syntax[B], original: (Substitution.this)#Syntax[A], subst: (Substitution.this)#Syntax[A]): (Substitution.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.eliminate", "link" : "scallion\/factorization\/Substitution.html#eliminate[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A]):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "substitute", "tail" : "(in: (Substitution.this)#Syntax[B], original: (Substitution.this)#Syntax[A], subst: (Substitution.this)#Syntax[A], elim: Boolean): (Substitution.this)#Syntax[B]", "member" : "scallion.factorization.Substitution.substitute", "link" : "scallion\/factorization\/Substitution.html#substitute[A,B](in:Substitution.this.Syntax[B],original:Substitution.this.Syntax[A],subst:Substitution.this.Syntax[A],elim:Boolean):Substitution.this.Syntax[B]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/Substitution.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/Substitution.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/Substitution.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/Substitution.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/Substitution.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/Substitution.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/Substitution.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Substitution.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Substitution.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Substitution.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/Substitution.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/Substitution.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/Substitution.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/Substitution.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/Substitution.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/Substitution.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/Substitution.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/Substitution.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/Substitution.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to apply substitution to a syntax.", "trait" : "scallion\/factorization\/Substitution.html", "kind" : "trait"}, {"name" : "scallion.factorization.Unfold", "members_trait" : [{"label" : "unfoldLeftmostRecursives", "tail" : "(syntax: (Unfold.this)#Syntax[A]): (Unfold.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldLeftmostRecursives", "link" : "scallion\/factorization\/Unfold.html#unfoldLeftmostRecursives[A](syntax:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "unfoldDisjunctions", "tail" : "(s: (Unfold.this)#Syntax[A]): (Unfold.this)#Syntax[A]", "member" : "scallion.factorization.Unfold.unfoldDisjunctions", "link" : "scallion\/factorization\/Unfold.html#unfoldDisjunctions[A](s:Unfold.this.Syntax[A]):Unfold.this.Syntax[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/factorization\/Unfold.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/factorization\/Unfold.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/factorization\/Unfold.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/factorization\/Unfold.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/factorization\/Unfold.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/factorization\/Unfold.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/factorization\/Unfold.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Unfold.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Unfold.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/factorization\/Unfold.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/factorization\/Unfold.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/factorization\/Unfold.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/factorization\/Unfold.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/factorization\/Unfold.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/factorization\/Unfold.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/factorization\/Unfold.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/factorization\/Unfold.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/factorization\/Unfold.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/factorization\/Unfold.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains functions to apply unfolding to a syntax.", "trait" : "scallion\/factorization\/Unfold.html", "kind" : "trait"}], "scallion.util" : [{"name" : "scallion.util.Unfolds", "shortDescription" : "Contains functions to unfold values.", "object" : "scallion\/util\/Unfolds$.html", "members_object" : [{"label" : "unfoldRight", "tail" : "(f: PartialFunction[B, (A, B)]): (B) ⇒ Seq[~[Seq[A], B]]", "member" : "scallion.util.Unfolds.unfoldRight", "link" : "scallion\/util\/Unfolds$.html#unfoldRight[A,B](f:PartialFunction[B,(A,B)]):B=>Seq[Seq[A]~B]", "kind" : "def"}, {"label" : "unfoldLeft", "tail" : "(f: PartialFunction[B, (B, A)]): (B) ⇒ Seq[~[B, Seq[A]]]", "member" : "scallion.util.Unfolds.unfoldLeft", "link" : "scallion\/util\/Unfolds$.html#unfoldLeft[A,B](f:PartialFunction[B,(B,A)]):B=>Seq[B~Seq[A]]", "kind" : "def"}, {"label" : "unreduceRight", "tail" : "(f: PartialFunction[A, (A, A)]): (A) ⇒ Seq[Seq[A]]", "member" : "scallion.util.Unfolds.unreduceRight", "link" : "scallion\/util\/Unfolds$.html#unreduceRight[A](f:PartialFunction[A,(A,A)]):A=>Seq[Seq[A]]", "kind" : "def"}, {"label" : "unreduceLeft", "tail" : "(f: PartialFunction[A, (A, A)]): (A) ⇒ Seq[Seq[A]]", "member" : "scallion.util.Unfolds.unreduceLeft", "link" : "scallion\/util\/Unfolds$.html#unreduceLeft[A](f:PartialFunction[A,(A,A)]):A=>Seq[Seq[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/util\/Unfolds$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/util\/Unfolds$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/util\/Unfolds$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/util\/Unfolds$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/util\/Unfolds$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/util\/Unfolds$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/util\/Unfolds$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/util\/Unfolds$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/util\/Unfolds$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/util\/Unfolds$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/util\/Unfolds$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/util\/Unfolds$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/util\/Unfolds$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/util\/Unfolds$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/util\/Unfolds$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/util\/Unfolds$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/util\/Unfolds$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/util\/Unfolds$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/util\/Unfolds$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scallion" : [{"name" : "scallion.Debug", "members_trait" : [{"label" : "debugString", "tail" : "(syntax: (Debug.this)#Syntax[A], showTrails: Boolean, ansi: Boolean): String", "member" : "scallion.Debug.debugString", "link" : "scallion\/Debug.html#debugString[A](syntax:Debug.this.Syntax[A],showTrails:Boolean,ansi:Boolean):String", "kind" : "def"}, {"label" : "debug", "tail" : "(syntax: (Debug.this)#Syntax[A], showTrails: Boolean, ansi: Boolean): Unit", "member" : "scallion.Debug.debug", "link" : "scallion\/Debug.html#debug[A](syntax:Debug.this.Syntax[A],showTrails:Boolean,ansi:Boolean):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/Debug.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/Debug.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/Debug.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/Debug.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/Debug.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/Debug.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/Debug.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Debug.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Debug.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Debug.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/Debug.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/Debug.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/Debug.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/Debug.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/Debug.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/Debug.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/Debug.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/Debug.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/Debug.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains methods to produce reports to help debug LL(1) conflicts in syntaxes.", "trait" : "scallion\/Debug.html", "kind" : "trait"}, {"name" : "scallion.Enumeration", "members_trait" : [{"label" : "Enumerator", "tail" : "", "member" : "scallion.Enumeration.Enumerator", "link" : "scallion\/Enumeration.html#Enumerator", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/Enumeration.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/Enumeration.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/Enumeration.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/Enumeration.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/Enumeration.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/Enumeration.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/Enumeration.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Enumeration.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Enumeration.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Enumeration.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/Enumeration.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/Enumeration.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/Enumeration.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/Enumeration.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/Enumeration.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/Enumeration.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/Enumeration.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/Enumeration.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/Enumeration.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides enumeration capabilites to syntaxes.", "trait" : "scallion\/Enumeration.html", "kind" : "trait"}, {"name" : "scallion.Operators", "members_trait" : [{"label" : "postfixes", "tail" : "(elem: (Operators.this)#Syntax[A], op: (Operators.this)#Syntax[Op])(function: (A, Op) ⇒ A, inverse: PartialFunction[A, (A, Op)]): (Operators.this)#Syntax[A]", "member" : "scallion.Operators.postfixes", "link" : "scallion\/Operators.html#postfixes[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op)=>A,inverse:PartialFunction[A,(A,Op)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "prefixes", "tail" : "(op: (Operators.this)#Syntax[Op], elem: (Operators.this)#Syntax[A])(function: (Op, A) ⇒ A, inverse: PartialFunction[A, (Op, A)]): (Operators.this)#Syntax[A]", "member" : "scallion.Operators.prefixes", "link" : "scallion\/Operators.html#prefixes[Op,A](op:Operators.this.Syntax[Op],elem:Operators.this.Syntax[A])(function:(Op,A)=>A,inverse:PartialFunction[A,(Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(elem: (Operators.this)#Syntax[A], op: (Operators.this)#Syntax[Op])(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): (Operators.this)#Syntax[A]", "member" : "scallion.Operators.infixRight", "link" : "scallion\/Operators.html#infixRight[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(elem: (Operators.this)#Syntax[A], op: (Operators.this)#Syntax[Op])(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): (Operators.this)#Syntax[A]", "member" : "scallion.Operators.infixLeft", "link" : "scallion\/Operators.html#infixLeft[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "operators", "tail" : "(elem: (Operators.this)#Syntax[A])(levels: (Operators.this)#Level[Op]*)(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): (Operators.this)#Syntax[A]", "member" : "scallion.Operators.operators", "link" : "scallion\/Operators.html#operators[Op,A](elem:Operators.this.Syntax[A])(levels:Operators.this.Level[Op]*)(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "LevelDecorator", "tail" : "", "member" : "scallion.Operators.LevelDecorator", "link" : "scallion\/Operators.html#LevelDecorator[Op]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Level", "tail" : "", "member" : "scallion.Operators.Level", "link" : "scallion\/Operators.html#Level[Op]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "RightAssociative", "tail" : "", "member" : "scallion.Operators.RightAssociative", "link" : "scallion\/Operators.html#RightAssociative", "kind" : "object"}, {"label" : "LeftAssociative", "tail" : "", "member" : "scallion.Operators.LeftAssociative", "link" : "scallion\/Operators.html#LeftAssociative", "kind" : "object"}, {"label" : "Associativity", "tail" : "", "member" : "scallion.Operators.Associativity", "link" : "scallion\/Operators.html#AssociativityextendsAnyRef", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/Operators.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/Operators.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/Operators.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/Operators.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/Operators.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/Operators.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/Operators.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Operators.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Operators.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Operators.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/Operators.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/Operators.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/Operators.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/Operators.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/Operators.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/Operators.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/Operators.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/Operators.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/Operators.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains utilities to write syntaxes with infix, prefix and postfix operators.", "trait" : "scallion\/Operators.html", "kind" : "trait"}, {"name" : "scallion.PairDecorator", "shortDescription" : "Adds an ~ methods to build pairs.", "members_class" : [{"label" : "~", "tail" : "(second: B): ~[A, B]", "member" : "scallion.PairDecorator.~", "link" : "scallion\/package$$PairDecorator.html#~[B](second:B):A~B", "kind" : "def"}, {"member" : "scallion.PairDecorator#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/package$$PairDecorator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/package$$PairDecorator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/package$$PairDecorator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/package$$PairDecorator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/package$$PairDecorator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/package$$PairDecorator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/package$$PairDecorator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$PairDecorator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$PairDecorator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$PairDecorator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/package$$PairDecorator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/package$$PairDecorator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/package$$PairDecorator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/package$$PairDecorator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/package$$PairDecorator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/package$$PairDecorator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/package$$PairDecorator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/package$$PairDecorator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/package$$PairDecorator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "scallion\/package$$PairDecorator.html", "kind" : "class"}, {"name" : "scallion.Parsers", "members_trait" : [{"label" : "LevelDecorator", "tail" : "", "member" : "scallion.Operators.LevelDecorator", "link" : "scallion\/Operators.html#LevelDecorator[Op]extendsAnyRef", "kind" : "implicit class"}, {"label" : "Level", "tail" : "", "member" : "scallion.Operators.Level", "link" : "scallion\/Operators.html#Level[Op]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "RightAssociative", "tail" : "", "member" : "scallion.Operators.RightAssociative", "link" : "scallion\/Operators.html#RightAssociative", "kind" : "object"}, {"label" : "LeftAssociative", "tail" : "", "member" : "scallion.Operators.LeftAssociative", "link" : "scallion\/Operators.html#LeftAssociative", "kind" : "object"}, {"label" : "Associativity", "tail" : "", "member" : "scallion.Operators.Associativity", "link" : "scallion\/Operators.html#AssociativityextendsAnyRef", "kind" : "sealed trait"}, {"label" : "PrettyPrinter", "tail" : "", "member" : "scallion.PrettyPrinting.PrettyPrinter", "link" : "scallion\/PrettyPrinting.html#PrettyPrinter", "kind" : "object"}, {"label" : "PrettyPrinter", "tail" : "", "member" : "scallion.PrettyPrinting.PrettyPrinter", "link" : "scallion\/PrettyPrinting.html#PrettyPrinter[A]extendsAnyRef", "kind" : "trait"}, {"label" : "Enumerator", "tail" : "", "member" : "scallion.Enumeration.Enumerator", "link" : "scallion\/Enumeration.html#Enumerator", "kind" : "object"}, {"label" : "Parser", "tail" : "", "member" : "scallion.Parsing.Parser", "link" : "scallion\/Parsing.html#Parser", "kind" : "object"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "scallion.Parsing.UnexpectedEnd", "link" : "scallion\/Parsing.html#UnexpectedEnd[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "scallion.Parsing.UnexpectedToken", "link" : "scallion\/Parsing.html#UnexpectedToken[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "scallion.Parsing.Parsed", "link" : "scallion\/Parsing.html#Parsed[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "scallion.Parsing.ParseResult", "link" : "scallion\/Parsing.html#ParseResult[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "scallion.Parsing.Parser", "link" : "scallion\/Parsing.html#Parser[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Properties", "tail" : "", "member" : "scallion.SyntaxesProperties.Properties", "link" : "scallion\/SyntaxesProperties.html#Properties[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConflictException", "tail" : "", "member" : "scallion.SyntaxesProperties.ConflictException", "link" : "scallion\/SyntaxesProperties.html#ConflictExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#Conflict", "kind" : "object"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#ConflictextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ShouldNotFollowEntry", "tail" : "", "member" : "scallion.SyntaxesProperties.ShouldNotFollowEntry", "link" : "scallion\/SyntaxesProperties.html#ShouldNotFollowEntryextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Uninteresting", "tail" : "", "member" : "scallion.Syntaxes.Uninteresting", "link" : "scallion\/Syntaxes.html#Uninteresting[A]extendsAnyRef", "kind" : "trait"}, {"label" : "Skip", "tail" : "", "member" : "scallion.Syntaxes.Skip", "link" : "scallion\/Syntaxes.html#SkipextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Syntax", "tail" : "", "member" : "scallion.Syntaxes.Syntax", "link" : "scallion\/Syntaxes.html#Syntax", "kind" : "object"}, {"label" : "Syntax", "tail" : "", "member" : "scallion.Syntaxes.Syntax", "link" : "scallion\/Syntaxes.html#Syntax[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "SafeImplicits", "tail" : "", "member" : "scallion.Syntaxes.SafeImplicits", "link" : "scallion\/Syntaxes.html#SafeImplicits", "kind" : "object"}, {"label" : "Implicits", "tail" : "", "member" : "scallion.Syntaxes.Implicits", "link" : "scallion\/Syntaxes.html#Implicits", "kind" : "object"}, {"label" : "UnsafeImplicits", "tail" : "", "member" : "scallion.Syntaxes.UnsafeImplicits", "link" : "scallion\/Syntaxes.html#UnsafeImplicitsextendsAnyRef", "kind" : "trait"}, {"label" : "debugString", "tail" : "(syntax: Syntax[A], showTrails: Boolean, ansi: Boolean): String", "member" : "scallion.Debug.debugString", "link" : "scallion\/package$$Parsers.html#debugString[A](syntax:Debug.this.Syntax[A],showTrails:Boolean,ansi:Boolean):String", "kind" : "def"}, {"label" : "debug", "tail" : "(syntax: Syntax[A], showTrails: Boolean, ansi: Boolean): Unit", "member" : "scallion.Debug.debug", "link" : "scallion\/package$$Parsers.html#debug[A](syntax:Debug.this.Syntax[A],showTrails:Boolean,ansi:Boolean):Unit", "kind" : "def"}, {"label" : "postfixes", "tail" : "(elem: Syntax[A], op: Syntax[Op])(function: (A, Op) ⇒ A, inverse: PartialFunction[A, (A, Op)]): Syntax[A]", "member" : "scallion.Operators.postfixes", "link" : "scallion\/package$$Parsers.html#postfixes[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op)=>A,inverse:PartialFunction[A,(A,Op)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "prefixes", "tail" : "(op: Syntax[Op], elem: Syntax[A])(function: (Op, A) ⇒ A, inverse: PartialFunction[A, (Op, A)]): Syntax[A]", "member" : "scallion.Operators.prefixes", "link" : "scallion\/package$$Parsers.html#prefixes[Op,A](op:Operators.this.Syntax[Op],elem:Operators.this.Syntax[A])(function:(Op,A)=>A,inverse:PartialFunction[A,(Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixRight", "tail" : "(elem: Syntax[A], op: Syntax[Op])(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): Syntax[A]", "member" : "scallion.Operators.infixRight", "link" : "scallion\/package$$Parsers.html#infixRight[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "infixLeft", "tail" : "(elem: Syntax[A], op: Syntax[Op])(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): Syntax[A]", "member" : "scallion.Operators.infixLeft", "link" : "scallion\/package$$Parsers.html#infixLeft[Op,A](elem:Operators.this.Syntax[A],op:Operators.this.Syntax[Op])(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "operators", "tail" : "(elem: Syntax[A])(levels: Level[Op]*)(function: (A, Op, A) ⇒ A, inverse: PartialFunction[A, (A, Op, A)]): Syntax[A]", "member" : "scallion.Operators.operators", "link" : "scallion\/package$$Parsers.html#operators[Op,A](elem:Operators.this.Syntax[A])(levels:Operators.this.Level[Op]*)(function:(A,Op,A)=>A,inverse:PartialFunction[A,(A,Op,A)]):Operators.this.Syntax[A]", "kind" : "def"}, {"label" : "syntaxToLL1Properties", "tail" : "(syntax: Syntax[A]): Properties[A]", "member" : "scallion.Parsing.syntaxToLL1Properties", "link" : "scallion\/package$$Parsers.html#syntaxToLL1Properties[A](syntax:Parsing.this.Syntax[A]):Parsing.this.Properties[A]", "kind" : "implicit def"}, {"label" : "getProperties", "tail" : "(syntax: Syntax[A]): Properties[A]", "member" : "scallion.SyntaxesProperties.getProperties", "link" : "scallion\/package$$Parsers.html#getProperties[A](syntax:SyntaxesProperties.this.Syntax[A]):SyntaxesProperties.this.Properties[A]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(syntaxes: Syntax[A]*): Syntax[A]", "member" : "scallion.Syntaxes.oneOf", "link" : "scallion\/package$$Parsers.html#oneOf[A](syntaxes:Syntaxes.this.Syntax[A]*):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.rep1sep", "link" : "scallion\/package$$Parsers.html#rep1sep[A,B](rep:Parsers.this.Syntax[A],sep:Parsers.this.Syntax[B]):Parsers.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.repsep", "link" : "scallion\/package$$Parsers.html#repsep[A,B](rep:Parsers.this.Syntax[A],sep:Parsers.this.Syntax[B]):Parsers.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "many1", "tail" : "(rep: Syntax[A], mark: Option[Mark]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.many1", "link" : "scallion\/package$$Parsers.html#many1[A](rep:Syntaxes.this.Syntax[A],mark:Option[Syntaxes.this.Mark]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(rep: Syntax[A], mark: Option[Mark]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.many", "link" : "scallion\/package$$Parsers.html#many[A](rep:Syntaxes.this.Syntax[A],mark:Option[Syntaxes.this.Mark]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "opt", "tail" : "(syntax: Syntax[A]): Syntax[Option[A]]", "member" : "scallion.Syntaxes.opt", "link" : "scallion\/package$$Parsers.html#opt[A](syntax:Syntaxes.this.Syntax[A]):Syntaxes.this.Syntax[Option[A]]", "kind" : "def"}, {"label" : "failure", "tail" : "(): Syntax[A]", "member" : "scallion.Syntaxes.failure", "link" : "scallion\/package$$Parsers.html#failure[A]:Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "epsilon", "tail" : "(value: A): Syntax[A]", "member" : "scallion.Syntaxes.epsilon", "link" : "scallion\/package$$Parsers.html#epsilon[A](value:A):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: ⇒ Syntax[A]): Syntax[A]", "member" : "scallion.Syntaxes.recursive", "link" : "scallion\/package$$Parsers.html#recursive[A](syntax:=>Syntaxes.this.Syntax[A]):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "accept", "tail" : "(kind: Kind)(function: PartialFunction[Token, A], inverse: (A) ⇒ Seq[Token]): Syntax[A]", "member" : "scallion.Syntaxes.accept", "link" : "scallion\/package$$Parsers.html#accept[A](kind:Syntaxes.this.Kind)(function:PartialFunction[Syntaxes.this.Token,A],inverse:A=>Seq[Syntaxes.this.Token]):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind): Syntax[Token]", "member" : "scallion.Syntaxes.elem", "link" : "scallion\/package$$Parsers.html#elem(kind:Syntaxes.this.Kind):Syntaxes.this.Syntax[Syntaxes.this.Token]", "kind" : "def"}, {"label" : "Mark", "tail" : "", "member" : "scallion.Syntaxes.Mark", "link" : "scallion\/package$$Parsers.html#Mark=String", "kind" : "type"}, {"label" : "RecId", "tail" : "", "member" : "scallion.Syntaxes.RecId", "link" : "scallion\/package$$Parsers.html#RecId=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/package$$Parsers.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/package$$Parsers.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/package$$Parsers.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/package$$Parsers.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/package$$Parsers.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/package$$Parsers.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/package$$Parsers.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$Parsers.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$Parsers.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$Parsers.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/package$$Parsers.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/package$$Parsers.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/package$$Parsers.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/package$$Parsers.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/package$$Parsers.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/package$$Parsers.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/package$$Parsers.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/package$$Parsers.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/package$$Parsers.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getKind", "tail" : "(token: Token): Kind", "member" : "scallion.Syntaxes.getKind", "link" : "scallion\/package$$Parsers.html#getKind(token:Syntaxes.this.Token):Syntaxes.this.Kind", "kind" : "abstract def"}, {"member" : "scallion.Syntaxes.Kind", "error" : "unsupported entity"}, {"member" : "scallion.Syntaxes.Token", "error" : "unsupported entity"}], "shortDescription" : "Main trait for defining parsers.", "trait" : "scallion\/package$$Parsers.html", "kind" : "trait"}, {"name" : "scallion.Parsing", "members_trait" : [{"label" : "Properties", "tail" : "", "member" : "scallion.SyntaxesProperties.Properties", "link" : "scallion\/SyntaxesProperties.html#Properties[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConflictException", "tail" : "", "member" : "scallion.SyntaxesProperties.ConflictException", "link" : "scallion\/SyntaxesProperties.html#ConflictExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#Conflict", "kind" : "object"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#ConflictextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ShouldNotFollowEntry", "tail" : "", "member" : "scallion.SyntaxesProperties.ShouldNotFollowEntry", "link" : "scallion\/SyntaxesProperties.html#ShouldNotFollowEntryextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Parser", "tail" : "", "member" : "scallion.Parsing.Parser", "link" : "scallion\/Parsing.html#Parser", "kind" : "object"}, {"label" : "UnexpectedEnd", "tail" : "", "member" : "scallion.Parsing.UnexpectedEnd", "link" : "scallion\/Parsing.html#UnexpectedEnd[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "UnexpectedToken", "tail" : "", "member" : "scallion.Parsing.UnexpectedToken", "link" : "scallion\/Parsing.html#UnexpectedToken[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "Parsed", "tail" : "", "member" : "scallion.Parsing.Parsed", "link" : "scallion\/Parsing.html#Parsed[A]extendsParsing.this.ParseResult[A]withProductwithSerializable", "kind" : "case class"}, {"label" : "ParseResult", "tail" : "", "member" : "scallion.Parsing.ParseResult", "link" : "scallion\/Parsing.html#ParseResult[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Parser", "tail" : "", "member" : "scallion.Parsing.Parser", "link" : "scallion\/Parsing.html#Parser[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "syntaxToLL1Properties", "tail" : "(syntax: (Parsing.this)#Syntax[A]): (Parsing.this)#Properties[A]", "member" : "scallion.Parsing.syntaxToLL1Properties", "link" : "scallion\/Parsing.html#syntaxToLL1Properties[A](syntax:Parsing.this.Syntax[A]):Parsing.this.Properties[A]", "kind" : "implicit def"}, {"label" : "getProperties", "tail" : "(syntax: (Parsing.this)#Syntax[A]): (Parsing.this)#Properties[A]", "member" : "scallion.SyntaxesProperties.getProperties", "link" : "scallion\/Parsing.html#getProperties[A](syntax:SyntaxesProperties.this.Syntax[A]):SyntaxesProperties.this.Properties[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/Parsing.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/Parsing.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/Parsing.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/Parsing.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/Parsing.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/Parsing.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/Parsing.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Parsing.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Parsing.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Parsing.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/Parsing.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/Parsing.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/Parsing.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/Parsing.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/Parsing.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/Parsing.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/Parsing.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/Parsing.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/Parsing.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "This trait implements LL(1) parsing with derivatives.", "trait" : "scallion\/Parsing.html", "kind" : "trait"}, {"name" : "scallion.PrettyPrinting", "members_trait" : [{"label" : "PrettyPrinter", "tail" : "", "member" : "scallion.PrettyPrinting.PrettyPrinter", "link" : "scallion\/PrettyPrinting.html#PrettyPrinter", "kind" : "object"}, {"label" : "PrettyPrinter", "tail" : "", "member" : "scallion.PrettyPrinting.PrettyPrinter", "link" : "scallion\/PrettyPrinting.html#PrettyPrinter[A]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/PrettyPrinting.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/PrettyPrinting.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/PrettyPrinting.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/PrettyPrinting.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/PrettyPrinting.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/PrettyPrinting.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/PrettyPrinting.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/PrettyPrinting.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/PrettyPrinting.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/PrettyPrinting.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/PrettyPrinting.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/PrettyPrinting.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/PrettyPrinting.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/PrettyPrinting.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/PrettyPrinting.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/PrettyPrinting.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/PrettyPrinting.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/PrettyPrinting.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/PrettyPrinting.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Provides pretty printing capabilites to syntaxes.", "trait" : "scallion\/PrettyPrinting.html", "kind" : "trait"}, {"name" : "scallion.Syntaxes", "members_trait" : [{"label" : "oneOf", "tail" : "(syntaxes: Syntax[A]*): Syntax[A]", "member" : "scallion.Syntaxes.oneOf", "link" : "scallion\/Syntaxes.html#oneOf[A](syntaxes:Syntaxes.this.Syntax[A]*):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "rep1sep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.rep1sep", "link" : "scallion\/Syntaxes.html#rep1sep[A,B](rep:Syntaxes.this.Syntax[A],sep:Syntaxes.this.Syntax[B]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "repsep", "tail" : "(rep: Syntax[A], sep: Syntax[B]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.repsep", "link" : "scallion\/Syntaxes.html#repsep[A,B](rep:Syntaxes.this.Syntax[A],sep:Syntaxes.this.Syntax[B]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "many1", "tail" : "(rep: Syntax[A], mark: Option[Mark]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.many1", "link" : "scallion\/Syntaxes.html#many1[A](rep:Syntaxes.this.Syntax[A],mark:Option[Syntaxes.this.Mark]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "many", "tail" : "(rep: Syntax[A], mark: Option[Mark]): Syntax[Seq[A]]", "member" : "scallion.Syntaxes.many", "link" : "scallion\/Syntaxes.html#many[A](rep:Syntaxes.this.Syntax[A],mark:Option[Syntaxes.this.Mark]):Syntaxes.this.Syntax[Seq[A]]", "kind" : "def"}, {"label" : "opt", "tail" : "(syntax: Syntax[A]): Syntax[Option[A]]", "member" : "scallion.Syntaxes.opt", "link" : "scallion\/Syntaxes.html#opt[A](syntax:Syntaxes.this.Syntax[A]):Syntaxes.this.Syntax[Option[A]]", "kind" : "def"}, {"label" : "failure", "tail" : "(): Syntax[A]", "member" : "scallion.Syntaxes.failure", "link" : "scallion\/Syntaxes.html#failure[A]:Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "epsilon", "tail" : "(value: A): Syntax[A]", "member" : "scallion.Syntaxes.epsilon", "link" : "scallion\/Syntaxes.html#epsilon[A](value:A):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "recursive", "tail" : "(syntax: ⇒ Syntax[A]): Syntax[A]", "member" : "scallion.Syntaxes.recursive", "link" : "scallion\/Syntaxes.html#recursive[A](syntax:=>Syntaxes.this.Syntax[A]):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "accept", "tail" : "(kind: Kind)(function: PartialFunction[Token, A], inverse: (A) ⇒ Seq[Token]): Syntax[A]", "member" : "scallion.Syntaxes.accept", "link" : "scallion\/Syntaxes.html#accept[A](kind:Syntaxes.this.Kind)(function:PartialFunction[Syntaxes.this.Token,A],inverse:A=>Seq[Syntaxes.this.Token]):Syntaxes.this.Syntax[A]", "kind" : "def"}, {"label" : "elem", "tail" : "(kind: Kind): Syntax[Token]", "member" : "scallion.Syntaxes.elem", "link" : "scallion\/Syntaxes.html#elem(kind:Syntaxes.this.Kind):Syntaxes.this.Syntax[Syntaxes.this.Token]", "kind" : "def"}, {"label" : "Uninteresting", "tail" : "", "member" : "scallion.Syntaxes.Uninteresting", "link" : "scallion\/Syntaxes.html#Uninteresting[A]extendsAnyRef", "kind" : "trait"}, {"label" : "Skip", "tail" : "", "member" : "scallion.Syntaxes.Skip", "link" : "scallion\/Syntaxes.html#SkipextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Syntax", "tail" : "", "member" : "scallion.Syntaxes.Syntax", "link" : "scallion\/Syntaxes.html#Syntax", "kind" : "object"}, {"label" : "Syntax", "tail" : "", "member" : "scallion.Syntaxes.Syntax", "link" : "scallion\/Syntaxes.html#Syntax[A]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "SafeImplicits", "tail" : "", "member" : "scallion.Syntaxes.SafeImplicits", "link" : "scallion\/Syntaxes.html#SafeImplicits", "kind" : "object"}, {"label" : "Implicits", "tail" : "", "member" : "scallion.Syntaxes.Implicits", "link" : "scallion\/Syntaxes.html#Implicits", "kind" : "object"}, {"label" : "UnsafeImplicits", "tail" : "", "member" : "scallion.Syntaxes.UnsafeImplicits", "link" : "scallion\/Syntaxes.html#UnsafeImplicitsextendsAnyRef", "kind" : "trait"}, {"label" : "Mark", "tail" : "", "member" : "scallion.Syntaxes.Mark", "link" : "scallion\/Syntaxes.html#Mark=String", "kind" : "type"}, {"label" : "RecId", "tail" : "", "member" : "scallion.Syntaxes.RecId", "link" : "scallion\/Syntaxes.html#RecId=Int", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/Syntaxes.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/Syntaxes.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/Syntaxes.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/Syntaxes.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/Syntaxes.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/Syntaxes.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/Syntaxes.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Syntaxes.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Syntaxes.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/Syntaxes.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/Syntaxes.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/Syntaxes.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/Syntaxes.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/Syntaxes.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/Syntaxes.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/Syntaxes.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/Syntaxes.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/Syntaxes.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/Syntaxes.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getKind", "tail" : "(token: Token): Kind", "member" : "scallion.Syntaxes.getKind", "link" : "scallion\/Syntaxes.html#getKind(token:Syntaxes.this.Token):Syntaxes.this.Kind", "kind" : "abstract def"}, {"member" : "scallion.Syntaxes.Kind", "error" : "unsupported entity"}, {"member" : "scallion.Syntaxes.Token", "error" : "unsupported entity"}], "shortDescription" : "Contains the definition of syntaxes.", "trait" : "scallion\/Syntaxes.html", "kind" : "trait"}, {"name" : "scallion.SyntaxesProperties", "members_trait" : [{"label" : "getProperties", "tail" : "(syntax: (SyntaxesProperties.this)#Syntax[A]): (SyntaxesProperties.this)#Properties[A]", "member" : "scallion.SyntaxesProperties.getProperties", "link" : "scallion\/SyntaxesProperties.html#getProperties[A](syntax:SyntaxesProperties.this.Syntax[A]):SyntaxesProperties.this.Properties[A]", "kind" : "def"}, {"label" : "Properties", "tail" : "", "member" : "scallion.SyntaxesProperties.Properties", "link" : "scallion\/SyntaxesProperties.html#Properties[A]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "ConflictException", "tail" : "", "member" : "scallion.SyntaxesProperties.ConflictException", "link" : "scallion\/SyntaxesProperties.html#ConflictExceptionextendsExceptionwithProductwithSerializable", "kind" : "case class"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#Conflict", "kind" : "object"}, {"label" : "Conflict", "tail" : "", "member" : "scallion.SyntaxesProperties.Conflict", "link" : "scallion\/SyntaxesProperties.html#ConflictextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ShouldNotFollowEntry", "tail" : "", "member" : "scallion.SyntaxesProperties.ShouldNotFollowEntry", "link" : "scallion\/SyntaxesProperties.html#ShouldNotFollowEntryextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/SyntaxesProperties.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/SyntaxesProperties.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/SyntaxesProperties.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/SyntaxesProperties.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/SyntaxesProperties.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/SyntaxesProperties.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/SyntaxesProperties.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/SyntaxesProperties.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/SyntaxesProperties.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/SyntaxesProperties.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/SyntaxesProperties.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/SyntaxesProperties.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/SyntaxesProperties.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/SyntaxesProperties.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/SyntaxesProperties.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/SyntaxesProperties.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/SyntaxesProperties.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/SyntaxesProperties.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/SyntaxesProperties.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains methods extending syntaxes with their properties (nullable, first set, follow set, ...)", "trait" : "scallion\/SyntaxesProperties.html", "kind" : "trait"}, {"name" : "scallion.~", "shortDescription" : "Simply a pair.", "members_case class" : [{"label" : "~", "tail" : "(next: C): ~[~[A, B], C]", "member" : "scallion.~.~", "link" : "scallion\/package$$$tilde.html#~[C](next:C):A~B~C", "kind" : "def"}, {"member" : "scallion.~#<init>", "error" : "unsupported entity"}, {"label" : "_2", "tail" : ": B", "member" : "scallion.~._2", "link" : "scallion\/package$$$tilde.html#_2:B", "kind" : "val"}, {"label" : "_1", "tail" : ": A", "member" : "scallion.~._1", "link" : "scallion\/package$$$tilde.html#_1:A", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/package$$$tilde.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/package$$$tilde.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/package$$$tilde.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/package$$$tilde.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/package$$$tilde.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/package$$$tilde.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/package$$$tilde.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$$tilde.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$$tilde.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/package$$$tilde.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/package$$$tilde.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/package$$$tilde.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/package$$$tilde.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/package$$$tilde.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/package$$$tilde.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/package$$$tilde.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "scallion\/package$$$tilde.html", "kind" : "case class"}], "scallion.visualization" : [{"name" : "scallion.visualization.Grammars", "members_trait" : [{"label" : "grammars", "tail" : "", "member" : "scallion.visualization.Grammars.grammars", "link" : "scallion\/visualization\/Grammars.html#grammars", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/visualization\/Grammars.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/visualization\/Grammars.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/visualization\/Grammars.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/visualization\/Grammars.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/visualization\/Grammars.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/visualization\/Grammars.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/visualization\/Grammars.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Grammars.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Grammars.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Grammars.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/visualization\/Grammars.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/visualization\/Grammars.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/visualization\/Grammars.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/visualization\/Grammars.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/visualization\/Grammars.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/visualization\/Grammars.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/visualization\/Grammars.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/visualization\/Grammars.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/visualization\/Grammars.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains utilities to visualize syntaxes as BNF grammars.", "trait" : "scallion\/visualization\/Grammars.html", "kind" : "trait"}, {"name" : "scallion.visualization.Graphs", "members_trait" : [{"label" : "graphs", "tail" : "", "member" : "scallion.visualization.Graphs.graphs", "link" : "scallion\/visualization\/Graphs.html#graphs", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "scallion\/visualization\/Graphs.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "scallion\/visualization\/Graphs.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "scallion\/visualization\/Graphs.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "scallion\/visualization\/Graphs.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "scallion\/visualization\/Graphs.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "scallion\/visualization\/Graphs.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "scallion\/visualization\/Graphs.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Graphs.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Graphs.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "scallion\/visualization\/Graphs.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "scallion\/visualization\/Graphs.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "scallion\/visualization\/Graphs.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "scallion\/visualization\/Graphs.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "scallion\/visualization\/Graphs.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "scallion\/visualization\/Graphs.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "scallion\/visualization\/Graphs.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "scallion\/visualization\/Graphs.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "scallion\/visualization\/Graphs.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "scallion\/visualization\/Graphs.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contains utilities to visualize syntaxes as graphs using Graphviz.", "trait" : "scallion\/visualization\/Graphs.html", "kind" : "trait"}]};